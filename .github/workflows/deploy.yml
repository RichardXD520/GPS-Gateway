name: Deploy GPS Gateway to Railway

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/gps-gateway

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: test
          USUARIOS_URL: http://localhost:4001
          INVENTARIO_URL: http://localhost:4002
          TRANSACCIONES_URL: http://localhost:4003
        run: npm test

      - name: Check if server starts
        env:
          PORT: 3000
          USUARIOS_URL: https://users-microservice-production.up.railway.app
          INVENTARIO_URL: https://inventario-gps-production.up.railway.app
          TRANSACCIONES_URL: https://inventory-microservice-production-a316.up.railway.app
          FRONTUSERLIST_URL: https://frontuserslist-production.up.railway.app
          JWT_SECRET: test-secret-key-for-ci
        run: |
          timeout 10s npm start || code=$?
          if [[ $code -ne 124 && $code -ne 0 ]]; then
            exit $code
          fi

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-railway:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Railway using latest CLI
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: npx @railway/cli up --service gps-gateway --no-confirm
